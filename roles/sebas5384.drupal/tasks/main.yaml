---
# Handle the random password.
- name: "Generate a random password."
  shell: >
    date +%s | sha256sum | base64 | head -c 8
  register: drupal_admin_password_result
  when: >
    drupal_admin_password == ""
    and drupal_source == "drush"

- name: "Drupal project full path as destination for project."
  shell: >
    python -c "import os,sys; print os.path.realpath(sys.argv[1])" {{ drupal_path }}/{{ drupal_source_parent_level }}
  register: drupal_project_path

- name: "Override Drupal Admin password fact."
  set_fact: "drupal_admin_password={{ drupal_admin_password_result.stdout }}"
  when: drupal_admin_password_result.stdout is defined

- debug: >
    msg="{{ drupal_admin_name }} password: {{ drupal_admin_password }}"
  when: drupal_admin_password_result.stdout is defined

- name: "Check if Drupal is booting."
  shell: >
    drush status | grep -e "Drupal bootstrap.*\:.*Successful"
    chdir={{ drupal_path }}
  sudo: yes
  sudo_user: "{{ drupal_www_owner }}"
  register: drupal_is_booting
  ignore_errors: True

# New project from Drupal.org
- name: "New project from Drupal.org"
  include: from-drush.yaml
  when: drupal_source == "drush"
  sudo: yes
  sudo_user: "{{ drupal_www_owner }}"

# New project from Git.
- name: "New project from Git."
  include: from-git.yaml
  when: drupal_source | match("^(git|ssh|(http(s)?)).+\.git$")
  sudo: yes
  sudo_user: "{{ drupal_www_owner }}"

# Drupal Settings files.
- include: settings.php.yaml
  sudo: yes
  when: drupal_is_booting.rc != 0

# Import Database, only when is an existant project.
- name: "Import Database from path or url."
  include: import-db.yaml
  sudo: yes
  sudo_user: "{{ drupal_www_owner }}"
  when: >
    drupal_source != 'drush'
    and drupal_db_dump != ''
    and drupal_db.database != '' and drupal_db.host != ''
    and drupal_is_booting.rc != 0

# Permissions.
- name: "Set permissions properly on files directory."
  file: >
    path={{ drupal_path }}/sites/default/files
    mode=6775
    owner={{ drupal_www_owner }}
    group={{ drupal_www_group }}
    state=directory
    recurse=yes
  sudo: yes

- name: "Create contrib directories."
  file: >
    path={{ drupal_path }}/sites/all/{{ item }}/contrib
    owner={{ drupal_www_owner }}
    group={{ drupal_www_group }}
    state=directory
    recurse=yes
  sudo: yes
  with_items:
    - modules
    - themes
